<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[前端-html]]></title>
    <url>%2F2019%2F07%2F30%2F%E5%89%8D%E7%AB%AF-html%2F</url>
    <content type="text"><![CDATA[html 本文是对html 基本知识的介绍 简单介绍1. web 服务到底是什么 web 服务，也就是 从浏览器 输入 url 地址 浏览器解析 url 地址，找到最近的 DNS 找到 对应的 ip地址 根据 ip 地址，找到 对应的服务器 服务器 给出对应的 内容 返回给 浏览器（返回的内容 就是一串 特殊的字符 — 就是 HTML） 浏览器 拿到 Html 内容 解析 （包括 html 标签 css js） 根据 一定的规则 渲染到 页面上 2. html是什么 html（超文本标记语言） 说白了就是 浏览器 能识别的 网页语言 脱硫浏览器，啥也不是 不同浏览器 解析的规则有一定的差异（其中，最著名的就是 IE，万恶之源） 以 .html 和 .htm 结尾 3. html 文档结构123456789&lt;!DOCTYPE html&gt;&lt;html lang="zh-CN"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;标题&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; &lt;!DOCTYPE html&gt; 代表 用 htnl5 的标准来解析（默认），当然也可以选择 用 htnl4 等更低版本的版本来解析 html 在最外层 包含 header 和body 4. html 标签的格式 &lt;标签名&gt;&lt;/标签名&gt; 一般以 这样的格式出现 （&lt;标签名/&gt; 也有这样的） 可以加 属性 key=value 的形式 &lt;div id=&#39;abc&#39;&gt;&lt;/div&gt; 插入style &lt;div style=&#39;color = &quot;red&quot;&#39;&gt;&lt;/div&gt; 标签1. html 配置说明 以及 header 标签 &lt;html&gt; 最外层标签 （!DOCTYPE 代表 用html5 的标准解析） &lt;style&gt;&lt;/style&gt; 用于包裹或则引入 css 样式 &lt;script&gt;&lt;/script&gt; 用于 包裹 或则引入 js 代码 &lt;link/&gt; 引入外部文件（包括图片） &lt;header&gt; 里面包含其他标签，主要用来说明 网站信息 &lt;title&gt;网页标题 &lt;meta&gt; 元信息，里面包含很多其他的配置 说明： 主要是 描述 此页面 的介绍信息，有利于 SEO 信息 不展示给用户 具体标签： 属性 .http-equiv 告诉浏览器 解析 文档时候的参数 123456&lt;!--指定文档的编码类型--&gt;&lt;meta http-equiv="content-Type" charset=UTF8"&gt; &lt;!--2秒后跳转到对应的网址，注意引号--&gt;&lt;meta http-equiv="refresh" content="2;URL=https://www.baidu.com"&gt;&lt;!--告诉IE以最高级模式渲染文档--&gt;&lt;meta http-equiv="x-ua-compatible" content="IE=edge"&gt; 属性name, 相当于 网页的简介 12&lt;meta name="keywords" content="meta总结,html meta,meta属性,meta跳转"&gt;&lt;meta name="description" content="meta总结"&gt; 2. 常用标签 常用标签一览 1234567891011121314151617181920212223242526272829303132333435363738&lt;div&gt;容器&lt;/div&gt;&lt;span&gt;容器&lt;/span&gt;&lt;a&gt;链接&lt;/a&gt;&lt;ul&gt; &lt;li&gt;列表&lt;/li&gt;&lt;/ul&gt;&lt;table&gt;... 表格&lt;/table&gt;输入框&lt;input/&gt;&lt;select&gt;下拉框&lt;/select&gt;&lt;b&gt;加粗&lt;/b&gt;&lt;i&gt;斜体&lt;/i&gt;&lt;u&gt;下划线&lt;/u&gt;&lt;s&gt;删除&lt;/s&gt;&lt;p&gt;段落标签&lt;/p&gt;&lt;h1&gt;标题1&lt;/h1&gt;&lt;h2&gt;标题2&lt;/h2&gt;&lt;h3&gt;标题3&lt;/h3&gt;&lt;h4&gt;标题4&lt;/h4&gt;&lt;h5&gt;标题5&lt;/h5&gt;&lt;h6&gt;标题6&lt;/h6&gt;&lt;!--换行--&gt;&lt;br&gt;&lt;!--水平线--&gt;&lt;hr&gt; 标签 代表什么 div 容器 span 容器 ul li 列表 table 表格 input 输入框 select 下拉框 b 加粗 i 斜体 u 下划线 s 删除 p 段落 h1 ~ h6 标题1 ~标题6 br 换行 hr 水平线（华丽的分割线） 特殊字符一览 代码(最后加分号) 展示内容 &amp;nbsp 空格 &amp;gt &gt; &amp;lt &lt; &amp;amp &amp; &amp;yen ¥ &amp;copy 版权 © &amp;reg 注册 div 与 span 标签 div 与 span 都没有什么特殊的意义，就是一个 空白标签 div 与 span 很重要，是作为 容器用的，主要用于布局 div 是 块级标签，span 是行内标签。这在布局的时候有很大的区别 块级标签独占一行，有width height margin padding 等 行内元素 不独占一行，width height 都是通过 css 没有办法设置，就是自身内容的大小 a 标签 - 超链接标签 就是点击可以直接跳转到一个 其他的地方，具体跳转到哪里，由你自己设置与规定（可以是一个 地址，文件，图片，邮箱） 12345678&lt;a href="http://www.baidu.com" target="_blank" &gt;点我&lt;/a&gt;href: 链接地址 1.绝对路径 www.baidu.com 跳到互联网中的一个 网址 2. 相对路径 “about.html” 跳到本站点的一个 地址 3. 锚点 “#top” 跳到页面中 top 的锚点处（id=‘top’）target： 规定如何跳转 1._black 在新标签中打开目标网页 2._self 表示在当前标签页中打开网页（本页面之前的网页没有了，换成 新的） 列表 无序列表 1234&lt;ul type='disc'&gt; &lt;li&gt;one&lt;/li&gt; &lt;li&gt;two&lt;/li&gt;&lt;/ul&gt; type的属性： disc - 实心圆（默认） circle - 空心圆 square - 实体方块 none - 无样式 （实际开发中，统一会设置为 none） 有序列表 123456&lt;ol type="1" start="2"&gt; &lt;li&gt;one&lt;/li&gt; &lt;li&gt;two&lt;/li&gt;&lt;/ol&gt;start="2"从 2 开始（不是从1 开始） type的属性： 1 数字列表 A 大写字母 a 小写字母 I 大写罗马数字 i 小写罗马数字 标题列表 1234567&lt;dl&gt; &lt;dt&gt;标题1&lt;/dt&gt; &lt;dd&gt;内容1&lt;/dd&gt; &lt;dt&gt;标题2&lt;/dt&gt; &lt;dd&gt;内容1&lt;/dd&gt; &lt;dd&gt;内容2&lt;/dd&gt;&lt;/dl&gt; 表格 理解成为 我们的 excel 就可以了 123456789101112131415161718192021&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;序号&lt;/th&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;爱好&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;张三&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;李四&lt;/td&gt; &lt;td&gt;女&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; 属性一览 boder 表格边框 cellpadding 内表框 cellspacing 外边框 width 宽度 rowspan 单元格竖跨多少行 （合并单元格） colspan 单元格横跨多少列 （合并单元格） input input 变种很多，通过 type 设置即可 1&lt;input type='text'name='name'&gt; 属性一览表 type属性值 表现形式 对应代码 text 单行输入 &lt;input type=&quot;text&quot; /&gt; password 密码输入 &lt;input type=&quot;password&quot; /&gt; date 时间控件 &lt;input type=&quot;date&quot; /&gt; checkbox 复选框 &lt;input type=&quot;password&quot; checked=&quot;checked&quot; /&gt; radio 单选框 &lt;input type=&quot;radio&quot; /&gt; file 文件选择 &lt;input type=&quot;file&quot; /&gt; submit 提交按钮 &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt; reset 重置按钮 &lt;input type=&quot;submit&quot; value=&quot;重置&quot; /&gt; button 普通输入框 &lt;input type=&quot;submit&quot; value=&quot;普通&quot; /&gt; hidden 隐藏输入框 &lt;input type=&quot;hidden&quot; value=&quot;看不到&quot;&gt; 属性说明： name input 的名字，form提交的时候 key的名字 value： type = button reset submit hiddne 按钮显示的字 type = text password 输入框的 值 type = checkbox radio file checked ： radio 与 checkbox 当前选项是否 被选中 readonly ： text password 不可编辑 disabled ： 全部禁用 select 下拉选择框 123456&lt;select name="city" id="city"&gt; &lt;option value="1"&gt;北京&lt;/option&gt; &lt;option selected="selected" value="2"&gt;上海&lt;/option&gt; &lt;option value="3"&gt;广州&lt;/option&gt; &lt;option value="4"&gt;深圳&lt;/option&gt;&lt;/select&gt; 属性说明： 属性值 含义 disabled 当前 选项 禁用 selected 当前 选项 选中 value 当前 option 选项 选中传递的 值 textarea 多行文本 123&lt;textarea name="memo" id="memo" cols="30" rows="10"&gt; 默认内容&lt;/textarea&gt; 属性说明： 属性值 含义 name 名称 rows 行数 cols 列数 disabled 禁用 form 表单 是一个抽象的 标签，里面是 其他 标签的集合，主要用于与 后端交互 1234&lt;form action=""&gt; &lt;label for="username"&gt;用户名&lt;/label&gt; &lt;input type="text" id="username" name="username"&gt;&lt;/form&gt; 属性说明： 属性值 含义accept accept-charset 提交表单时使用的字符集（默认：页面字符集） action 提交的地址 url autocomplete 浏览器是否自动完成表单（默认：开启） enctype 提交数据的编码 （默认： url-encoded） method HTTP 方法（默认：get） name 表单的名字（document.forms.name） novalidate 浏览器是否校验表单 target action 中 地址 url 链接方式 （默认：_self）]]></content>
      <tags>
        <tag>web 前端 html</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[webpack-basics]]></title>
    <url>%2F2019%2F07%2F25%2Fwebpack-basics%2F</url>
    <content type="text"><![CDATA[useage 这篇文档是 按照webpack官网 步骤 学习webpack 知识，有代码，有相应的说明，有总结 也有对官网代码实现过程不一致的地方的记录，欢迎一起交流学习 webpack-demo-1 基本安装 webpack-demo-2 如何创建一个 bundle 文件 webpack-demo-3 如何使用配置文件 （webpack.config.js） webpack-demo-4-assets css 的加载 css-loader style-loader 图片css 用 file-loader，（压缩图片 image-webpack-loader 和 url-loader） 字体的加载 file-loader 数据文件的加载 csv-loader xml-loader webpack-demo-5-output-manahement 输出多个 bundle.js 文件 html-webapck-plugin 的使用 clean-webpack-plugin 清理文件 延伸 知识： 代码分离 webpack-demo-6-devServer 主要就是 介绍了 自动编译 inlie-source-map : 这个不是 插件，是webpack 自带的，只需要配置一下即可，作用：开发环境 生成 代码的 souce-map, 出错找到对应的 文件，而不是编译之后的 bundle.js 文件 watch webpack-dev-server webpack-dev-minddleware 三选一即可，都有 自动检测代码跟新 再次编译的 功能 watch 最简单，只需要 webpack watch 即可 webpack-dev-server 是个插件，需要配置一下，高度集成在 webpack 中 （底层就是基于 webpack-dev-middleware 实现的 包含了 HRM 的功能） webpack-dev-middleware 也可以单独使用，结合 express 等web 框架，（是一个容器，与HRM不一样，其实 可以理解为 自己 实现一个 webpack-dev-server的功能） webpack-demo-7-devServer 主要介绍了 热跟新 的内容 devServer 中启用 hot：true webpack dev server 与 node 一起使用的时候 ，建议 单独一个文件启用，不要把 webpack-dev-server 与 webpack.config.js , 耦合在一起 热跟新 会遇到很多问题，跟新之后，很多事件需要重新绑定，样式等等需要重新渲染，借助 各自提供的loader 会在内部直接解决，(vue react css等loader 内部已经帮我们实现了，所以用的时候很省心，但是我们需要有这样的情况) webpack-demo-8-treeSharking 主要介绍 tree sharking 移除没有引入的代码 （慎用） 当impot {abc} from module ，打包时 去除 moudle 除了 abc 的方法 如何配置 找出 那些无用代码 “sideEffects”: false，代表所有的都 执行 treeSharking ，或则 [‘./abc.js’] 单独排除 abc.js 文件 压缩代码 ，使用wwebpack 自带的 uglifyJSplugin 代码压缩插件 插件必须支持去除无用代码才行 mode: “production” webpack –optimize-minimize 本案列中 实际 展示效果并不完全一致 唯一展示验证的一点是：当sideEffects：[],不包含 *.css ，那么css 样式被当做无用代码 移除了]]></content>
      <tags>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[makedowm常用指令]]></title>
    <url>%2F2019%2F07%2F23%2Fmakedowm%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[常用makedowm 指令的记录 // 标题 http://support.typora.io/Markdown-Reference/This is an H1This is an H2This is an H6// 引用块 This is a blockquote with two paragraphs. This is first paragraph. // 列表 Red 无序列表 Green Blue Red 有序列表 Green Blue // 任务列表 a task list item list syntax required normal formatting, @mentions, #1234 refs incomplete completed // 代码块​​1234require 'redcarpet'markdown = Redcarpet.new("Hello World!")puts markdown.to_html​ // 公式$$\mathbf{V}_1 \times \mathbf{V}_2 = \begin{vmatrix}\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\frac{\partial X}{\partial u} &amp; \frac{\partial Y}{\partial u} &amp; 0 \\frac{\partial X}{\partial v} &amp; \frac{\partial Y}{\partial v} &amp; 0 \\end{vmatrix}$$ // 表格 First Header Second Header Content Cell Content Cell Content Cell Content Cell // — Left-Aligned Center Aligned :———— :—————: col 3 is some wordy text col 2 is centered zebra stripes are neat //助脚的使用 — You can create footnotes like this[^footnote]. [^footnote]: Here is the text of the footnote. // 水平线 — *** // 链接 — This is an example inline link. This link has no title attribute. // 图片 — // 强调 斜体 == — single asterisks single underscores // 强调 加粗 == double asterisks double underscores // 代码Use the printf() function. // 删除线Mistaken text. becomes Mistaken text. // 下划线Underline becomes Underline.]]></content>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文章规划]]></title>
    <url>%2F2019%2F07%2F23%2F%E6%96%87%E7%AB%A0%E8%A7%84%E5%88%92%2F</url>
    <content type="text"><![CDATA[下面是要写的文章规划 ###环境&amp;&amp;工具 教程：如何通过webpack搭建vue多页面框架 纯手写一个 vue 的 webpack 纯手写一个 多页面 vue 的webpack 框架 纯手写一个 Reat 的webpack git 教程系列 ###编程语言 基础知识 javastript 基础知识 python 基础知识]]></content>
  </entry>
  <entry>
    <title><![CDATA[test3]]></title>
    <url>%2F2019%2F07%2F22%2Ftest3%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[功能 图片 查看更过 作者 置顶 标签]]></title>
    <url>%2F2019%2F07%2F22%2Ftest%2F</url>
    <content type="text"><![CDATA[起水后的孙杨一如既往地向观众致意，随后他振臂高呼了两次，庆贺自己的四连冠和第十金。7月21日，韩国光州游泳世锦赛展开游泳项目的争夺，中国选手孙杨以3分42秒44的成绩斩获男子400米自由泳金牌，不仅实现了该项目的个人世锦赛四连冠，同时也斩获了个人的世锦赛第十金。 “能够实现四连冠，成为自由泳历史上第一人，是对我之前训练的肯定。第一项决赛不好比，但是每个人都一样，到最后我就是咬牙，训练练到了，我就能坚持到底。”27岁的孙杨一直在挑战自我。赛前外教丹尼斯没有给孙杨太多要求，而是告诉他，你现在能力很强，要把之前的训练成果展示给大家看。孙杨说：“之前训练练得非常好，但确实太累了。在这样的年纪达到这个水平非常不容易，很少有人能长时间保持在高水平上，这对我来说是至高无上的荣誉。”孙杨坦言在收获了诸多荣誉之后，依旧勇往直前就是要为荣誉而战，而这背后的艰辛与付出只有他自己知道。 从2012年开始到现在，孙杨在国际赛场400米自由泳项目上的表现可谓是统治级的，他仅在2016年里约奥运会上让金牌旁落，遗憾以0.13秒之差输给了澳大利亚选手霍顿。而在21日的决赛中，霍顿则再次败给了孙杨，他以0.73秒之差斩获一枚银牌。在赛后的颁奖仪式上，霍顿全程未登上领奖台，领奖后拒绝与孙杨和季军意大利选手德蒂合影。对此，孙杨在赛后发布会上进行了正面回应：“他想通过这样的举动影响我在赛道上的发挥，但我就做好自己该做的。你可以对我有意见，但颁奖是非常神圣的，每个人都代表自己的国家。” 本次世锦赛孙杨还将参加200米、800米自由泳以及接力比赛，其中200米自由泳项目是他另一个力保的项目。对于明年东京奥运会新增项目800米自由泳，孙杨同样要全力去拼，一方面检验训练成果，同时也参考各国选手的表现来更加科学地制定下一步的训练规划。（李雪颖/文 安灵均/图）]]></content>
      <categories>
        <category>日记</category>
        <category>生活</category>
      </categories>
      <tags>
        <tag>数学</tag>
        <tag>文学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F07%2F22%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
